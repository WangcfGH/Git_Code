// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TestPbModule.proto

#include "TestPbModule.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace TestPbModulePg {
class ReqTestPbModule1DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReqTestPbModule1>
      _instance;
} _ReqTestPbModule1_default_instance_;
class TestPbModuleData1DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestPbModuleData1>
      _instance;
} _TestPbModuleData1_default_instance_;
class RspTestPbModule1DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RspTestPbModule1>
      _instance;
} _RspTestPbModule1_default_instance_;
}  // namespace TestPbModulePg
namespace protobuf_TestPbModule_2eproto {
void InitDefaultsReqTestPbModule1Impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::TestPbModulePg::_ReqTestPbModule1_default_instance_;
    new (ptr) ::TestPbModulePg::ReqTestPbModule1();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TestPbModulePg::ReqTestPbModule1::InitAsDefaultInstance();
}

void InitDefaultsReqTestPbModule1() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsReqTestPbModule1Impl);
}

void InitDefaultsTestPbModuleData1Impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::TestPbModulePg::_TestPbModuleData1_default_instance_;
    new (ptr) ::TestPbModulePg::TestPbModuleData1();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TestPbModulePg::TestPbModuleData1::InitAsDefaultInstance();
}

void InitDefaultsTestPbModuleData1() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTestPbModuleData1Impl);
}

void InitDefaultsRspTestPbModule1Impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_TestPbModule_2eproto::InitDefaultsTestPbModuleData1();
  {
    void* ptr = &::TestPbModulePg::_RspTestPbModule1_default_instance_;
    new (ptr) ::TestPbModulePg::RspTestPbModule1();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TestPbModulePg::RspTestPbModule1::InitAsDefaultInstance();
}

void InitDefaultsRspTestPbModule1() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRspTestPbModule1Impl);
}

::google::protobuf::Metadata file_level_metadata[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TestPbModulePg::ReqTestPbModule1, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TestPbModulePg::ReqTestPbModule1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TestPbModulePg::ReqTestPbModule1, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TestPbModulePg::ReqTestPbModule1, channel_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TestPbModulePg::TestPbModuleData1, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TestPbModulePg::TestPbModuleData1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TestPbModulePg::TestPbModuleData1, f1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TestPbModulePg::TestPbModuleData1, f2_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TestPbModulePg::RspTestPbModule1, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TestPbModulePg::RspTestPbModule1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TestPbModulePg::RspTestPbModule1, ok_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TestPbModulePg::RspTestPbModule1, list_data_),
  0,
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::TestPbModulePg::ReqTestPbModule1)},
  { 9, 16, sizeof(::TestPbModulePg::TestPbModuleData1)},
  { 18, 25, sizeof(::TestPbModulePg::RspTestPbModule1)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::TestPbModulePg::_ReqTestPbModule1_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::TestPbModulePg::_TestPbModuleData1_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::TestPbModulePg::_RspTestPbModule1_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "TestPbModule.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\022TestPbModule.proto\022\016TestPbModulePg\"3\n\020"
      "ReqTestPbModule1\022\016\n\006userid\030\001 \002(\005\022\017\n\007chan"
      "nel\030\002 \002(\005\"+\n\021TestPbModuleData1\022\n\n\002f1\030\001 \002"
      "(\005\022\n\n\002f2\030\002 \001(\t\"T\n\020RspTestPbModule1\022\n\n\002ok"
      "\030\001 \002(\010\0224\n\tlist_data\030\002 \003(\0132!.TestPbModule"
      "Pg.TestPbModuleData1"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 220);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "TestPbModule.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_TestPbModule_2eproto
namespace TestPbModulePg {

// ===================================================================

void ReqTestPbModule1::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReqTestPbModule1::kUseridFieldNumber;
const int ReqTestPbModule1::kChannelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReqTestPbModule1::ReqTestPbModule1()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_TestPbModule_2eproto::InitDefaultsReqTestPbModule1();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:TestPbModulePg.ReqTestPbModule1)
}
ReqTestPbModule1::ReqTestPbModule1(const ReqTestPbModule1& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&userid_, &from.userid_,
    static_cast<size_t>(reinterpret_cast<char*>(&channel_) -
    reinterpret_cast<char*>(&userid_)) + sizeof(channel_));
  // @@protoc_insertion_point(copy_constructor:TestPbModulePg.ReqTestPbModule1)
}

void ReqTestPbModule1::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&userid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&channel_) -
      reinterpret_cast<char*>(&userid_)) + sizeof(channel_));
}

ReqTestPbModule1::~ReqTestPbModule1() {
  // @@protoc_insertion_point(destructor:TestPbModulePg.ReqTestPbModule1)
  SharedDtor();
}

void ReqTestPbModule1::SharedDtor() {
}

void ReqTestPbModule1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReqTestPbModule1::descriptor() {
  ::protobuf_TestPbModule_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_TestPbModule_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReqTestPbModule1& ReqTestPbModule1::default_instance() {
  ::protobuf_TestPbModule_2eproto::InitDefaultsReqTestPbModule1();
  return *internal_default_instance();
}

ReqTestPbModule1* ReqTestPbModule1::New(::google::protobuf::Arena* arena) const {
  ReqTestPbModule1* n = new ReqTestPbModule1;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReqTestPbModule1::Clear() {
// @@protoc_insertion_point(message_clear_start:TestPbModulePg.ReqTestPbModule1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&userid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&channel_) -
        reinterpret_cast<char*>(&userid_)) + sizeof(channel_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ReqTestPbModule1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TestPbModulePg.ReqTestPbModule1)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 userid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 channel = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_channel();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &channel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TestPbModulePg.ReqTestPbModule1)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TestPbModulePg.ReqTestPbModule1)
  return false;
#undef DO_
}

void ReqTestPbModule1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TestPbModulePg.ReqTestPbModule1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 userid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->userid(), output);
  }

  // required int32 channel = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->channel(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:TestPbModulePg.ReqTestPbModule1)
}

::google::protobuf::uint8* ReqTestPbModule1::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TestPbModulePg.ReqTestPbModule1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 userid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->userid(), target);
  }

  // required int32 channel = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->channel(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TestPbModulePg.ReqTestPbModule1)
  return target;
}

size_t ReqTestPbModule1::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:TestPbModulePg.ReqTestPbModule1)
  size_t total_size = 0;

  if (has_userid()) {
    // required int32 userid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->userid());
  }

  if (has_channel()) {
    // required int32 channel = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->channel());
  }

  return total_size;
}
size_t ReqTestPbModule1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TestPbModulePg.ReqTestPbModule1)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 userid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->userid());

    // required int32 channel = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->channel());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReqTestPbModule1::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TestPbModulePg.ReqTestPbModule1)
  GOOGLE_DCHECK_NE(&from, this);
  const ReqTestPbModule1* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReqTestPbModule1>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TestPbModulePg.ReqTestPbModule1)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TestPbModulePg.ReqTestPbModule1)
    MergeFrom(*source);
  }
}

void ReqTestPbModule1::MergeFrom(const ReqTestPbModule1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TestPbModulePg.ReqTestPbModule1)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      userid_ = from.userid_;
    }
    if (cached_has_bits & 0x00000002u) {
      channel_ = from.channel_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ReqTestPbModule1::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TestPbModulePg.ReqTestPbModule1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqTestPbModule1::CopyFrom(const ReqTestPbModule1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TestPbModulePg.ReqTestPbModule1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqTestPbModule1::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void ReqTestPbModule1::Swap(ReqTestPbModule1* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReqTestPbModule1::InternalSwap(ReqTestPbModule1* other) {
  using std::swap;
  swap(userid_, other->userid_);
  swap(channel_, other->channel_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReqTestPbModule1::GetMetadata() const {
  protobuf_TestPbModule_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_TestPbModule_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TestPbModuleData1::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestPbModuleData1::kF1FieldNumber;
const int TestPbModuleData1::kF2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestPbModuleData1::TestPbModuleData1()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_TestPbModule_2eproto::InitDefaultsTestPbModuleData1();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:TestPbModulePg.TestPbModuleData1)
}
TestPbModuleData1::TestPbModuleData1(const TestPbModuleData1& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  f2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_f2()) {
    f2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.f2_);
  }
  f1_ = from.f1_;
  // @@protoc_insertion_point(copy_constructor:TestPbModulePg.TestPbModuleData1)
}

void TestPbModuleData1::SharedCtor() {
  _cached_size_ = 0;
  f2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  f1_ = 0;
}

TestPbModuleData1::~TestPbModuleData1() {
  // @@protoc_insertion_point(destructor:TestPbModulePg.TestPbModuleData1)
  SharedDtor();
}

void TestPbModuleData1::SharedDtor() {
  f2_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TestPbModuleData1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestPbModuleData1::descriptor() {
  ::protobuf_TestPbModule_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_TestPbModule_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TestPbModuleData1& TestPbModuleData1::default_instance() {
  ::protobuf_TestPbModule_2eproto::InitDefaultsTestPbModuleData1();
  return *internal_default_instance();
}

TestPbModuleData1* TestPbModuleData1::New(::google::protobuf::Arena* arena) const {
  TestPbModuleData1* n = new TestPbModuleData1;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TestPbModuleData1::Clear() {
// @@protoc_insertion_point(message_clear_start:TestPbModulePg.TestPbModuleData1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!f2_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*f2_.UnsafeRawStringPointer())->clear();
  }
  f1_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TestPbModuleData1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TestPbModulePg.TestPbModuleData1)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 f1 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_f1();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &f1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string f2 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_f2()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->f2().data(), static_cast<int>(this->f2().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "TestPbModulePg.TestPbModuleData1.f2");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TestPbModulePg.TestPbModuleData1)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TestPbModulePg.TestPbModuleData1)
  return false;
#undef DO_
}

void TestPbModuleData1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TestPbModulePg.TestPbModuleData1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 f1 = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->f1(), output);
  }

  // optional string f2 = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->f2().data(), static_cast<int>(this->f2().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "TestPbModulePg.TestPbModuleData1.f2");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->f2(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:TestPbModulePg.TestPbModuleData1)
}

::google::protobuf::uint8* TestPbModuleData1::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TestPbModulePg.TestPbModuleData1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 f1 = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->f1(), target);
  }

  // optional string f2 = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->f2().data(), static_cast<int>(this->f2().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "TestPbModulePg.TestPbModuleData1.f2");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->f2(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TestPbModulePg.TestPbModuleData1)
  return target;
}

size_t TestPbModuleData1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TestPbModulePg.TestPbModuleData1)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 f1 = 1;
  if (has_f1()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->f1());
  }
  // optional string f2 = 2;
  if (has_f2()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->f2());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestPbModuleData1::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TestPbModulePg.TestPbModuleData1)
  GOOGLE_DCHECK_NE(&from, this);
  const TestPbModuleData1* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestPbModuleData1>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TestPbModulePg.TestPbModuleData1)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TestPbModulePg.TestPbModuleData1)
    MergeFrom(*source);
  }
}

void TestPbModuleData1::MergeFrom(const TestPbModuleData1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TestPbModulePg.TestPbModuleData1)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_f2();
      f2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.f2_);
    }
    if (cached_has_bits & 0x00000002u) {
      f1_ = from.f1_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TestPbModuleData1::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TestPbModulePg.TestPbModuleData1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestPbModuleData1::CopyFrom(const TestPbModuleData1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TestPbModulePg.TestPbModuleData1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestPbModuleData1::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  return true;
}

void TestPbModuleData1::Swap(TestPbModuleData1* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TestPbModuleData1::InternalSwap(TestPbModuleData1* other) {
  using std::swap;
  f2_.Swap(&other->f2_);
  swap(f1_, other->f1_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TestPbModuleData1::GetMetadata() const {
  protobuf_TestPbModule_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_TestPbModule_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RspTestPbModule1::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RspTestPbModule1::kOkFieldNumber;
const int RspTestPbModule1::kListDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RspTestPbModule1::RspTestPbModule1()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_TestPbModule_2eproto::InitDefaultsRspTestPbModule1();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:TestPbModulePg.RspTestPbModule1)
}
RspTestPbModule1::RspTestPbModule1(const RspTestPbModule1& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      list_data_(from.list_data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ok_ = from.ok_;
  // @@protoc_insertion_point(copy_constructor:TestPbModulePg.RspTestPbModule1)
}

void RspTestPbModule1::SharedCtor() {
  _cached_size_ = 0;
  ok_ = false;
}

RspTestPbModule1::~RspTestPbModule1() {
  // @@protoc_insertion_point(destructor:TestPbModulePg.RspTestPbModule1)
  SharedDtor();
}

void RspTestPbModule1::SharedDtor() {
}

void RspTestPbModule1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RspTestPbModule1::descriptor() {
  ::protobuf_TestPbModule_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_TestPbModule_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RspTestPbModule1& RspTestPbModule1::default_instance() {
  ::protobuf_TestPbModule_2eproto::InitDefaultsRspTestPbModule1();
  return *internal_default_instance();
}

RspTestPbModule1* RspTestPbModule1::New(::google::protobuf::Arena* arena) const {
  RspTestPbModule1* n = new RspTestPbModule1;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RspTestPbModule1::Clear() {
// @@protoc_insertion_point(message_clear_start:TestPbModulePg.RspTestPbModule1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  list_data_.Clear();
  ok_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RspTestPbModule1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TestPbModulePg.RspTestPbModule1)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool ok = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_ok();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ok_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .TestPbModulePg.TestPbModuleData1 list_data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_list_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TestPbModulePg.RspTestPbModule1)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TestPbModulePg.RspTestPbModule1)
  return false;
#undef DO_
}

void RspTestPbModule1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TestPbModulePg.RspTestPbModule1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool ok = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->ok(), output);
  }

  // repeated .TestPbModulePg.TestPbModuleData1 list_data = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_data_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->list_data(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:TestPbModulePg.RspTestPbModule1)
}

::google::protobuf::uint8* RspTestPbModule1::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TestPbModulePg.RspTestPbModule1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool ok = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->ok(), target);
  }

  // repeated .TestPbModulePg.TestPbModuleData1 list_data = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_data_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->list_data(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TestPbModulePg.RspTestPbModule1)
  return target;
}

size_t RspTestPbModule1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TestPbModulePg.RspTestPbModule1)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required bool ok = 1;
  if (has_ok()) {
    total_size += 1 + 1;
  }
  // repeated .TestPbModulePg.TestPbModuleData1 list_data = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->list_data_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->list_data(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RspTestPbModule1::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TestPbModulePg.RspTestPbModule1)
  GOOGLE_DCHECK_NE(&from, this);
  const RspTestPbModule1* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RspTestPbModule1>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TestPbModulePg.RspTestPbModule1)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TestPbModulePg.RspTestPbModule1)
    MergeFrom(*source);
  }
}

void RspTestPbModule1::MergeFrom(const RspTestPbModule1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TestPbModulePg.RspTestPbModule1)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  list_data_.MergeFrom(from.list_data_);
  if (from.has_ok()) {
    set_ok(from.ok());
  }
}

void RspTestPbModule1::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TestPbModulePg.RspTestPbModule1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RspTestPbModule1::CopyFrom(const RspTestPbModule1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TestPbModulePg.RspTestPbModule1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RspTestPbModule1::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->list_data())) return false;
  return true;
}

void RspTestPbModule1::Swap(RspTestPbModule1* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RspTestPbModule1::InternalSwap(RspTestPbModule1* other) {
  using std::swap;
  list_data_.InternalSwap(&other->list_data_);
  swap(ok_, other->ok_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RspTestPbModule1::GetMetadata() const {
  protobuf_TestPbModule_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_TestPbModule_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace TestPbModulePg

// @@protoc_insertion_point(global_scope)
