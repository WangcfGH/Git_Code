// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TestPbModule.proto

#ifndef PROTOBUF_TestPbModule_2eproto__INCLUDED
#define PROTOBUF_TestPbModule_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_TestPbModule_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsReqTestPbModule1Impl();
void InitDefaultsReqTestPbModule1();
void InitDefaultsTestPbModuleData1Impl();
void InitDefaultsTestPbModuleData1();
void InitDefaultsRspTestPbModule1Impl();
void InitDefaultsRspTestPbModule1();
inline void InitDefaults() {
  InitDefaultsReqTestPbModule1();
  InitDefaultsTestPbModuleData1();
  InitDefaultsRspTestPbModule1();
}
}  // namespace protobuf_TestPbModule_2eproto
namespace TestPbModulePg {
class ReqTestPbModule1;
class ReqTestPbModule1DefaultTypeInternal;
extern ReqTestPbModule1DefaultTypeInternal _ReqTestPbModule1_default_instance_;
class RspTestPbModule1;
class RspTestPbModule1DefaultTypeInternal;
extern RspTestPbModule1DefaultTypeInternal _RspTestPbModule1_default_instance_;
class TestPbModuleData1;
class TestPbModuleData1DefaultTypeInternal;
extern TestPbModuleData1DefaultTypeInternal _TestPbModuleData1_default_instance_;
}  // namespace TestPbModulePg
namespace TestPbModulePg {

// ===================================================================

class ReqTestPbModule1 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TestPbModulePg.ReqTestPbModule1) */ {
 public:
  ReqTestPbModule1();
  virtual ~ReqTestPbModule1();

  ReqTestPbModule1(const ReqTestPbModule1& from);

  inline ReqTestPbModule1& operator=(const ReqTestPbModule1& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReqTestPbModule1(ReqTestPbModule1&& from) noexcept
    : ReqTestPbModule1() {
    *this = ::std::move(from);
  }

  inline ReqTestPbModule1& operator=(ReqTestPbModule1&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqTestPbModule1& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ReqTestPbModule1* internal_default_instance() {
    return reinterpret_cast<const ReqTestPbModule1*>(
               &_ReqTestPbModule1_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(ReqTestPbModule1* other);
  friend void swap(ReqTestPbModule1& a, ReqTestPbModule1& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReqTestPbModule1* New() const PROTOBUF_FINAL { return New(NULL); }

  ReqTestPbModule1* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ReqTestPbModule1& from);
  void MergeFrom(const ReqTestPbModule1& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ReqTestPbModule1* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 userid = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUseridFieldNumber = 1;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // required int32 channel = 2;
  bool has_channel() const;
  void clear_channel();
  static const int kChannelFieldNumber = 2;
  ::google::protobuf::int32 channel() const;
  void set_channel(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:TestPbModulePg.ReqTestPbModule1)
 private:
  void set_has_userid();
  void clear_has_userid();
  void set_has_channel();
  void clear_has_channel();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 userid_;
  ::google::protobuf::int32 channel_;
  friend struct ::protobuf_TestPbModule_2eproto::TableStruct;
  friend void ::protobuf_TestPbModule_2eproto::InitDefaultsReqTestPbModule1Impl();
};
// -------------------------------------------------------------------

class TestPbModuleData1 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TestPbModulePg.TestPbModuleData1) */ {
 public:
  TestPbModuleData1();
  virtual ~TestPbModuleData1();

  TestPbModuleData1(const TestPbModuleData1& from);

  inline TestPbModuleData1& operator=(const TestPbModuleData1& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TestPbModuleData1(TestPbModuleData1&& from) noexcept
    : TestPbModuleData1() {
    *this = ::std::move(from);
  }

  inline TestPbModuleData1& operator=(TestPbModuleData1&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TestPbModuleData1& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TestPbModuleData1* internal_default_instance() {
    return reinterpret_cast<const TestPbModuleData1*>(
               &_TestPbModuleData1_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(TestPbModuleData1* other);
  friend void swap(TestPbModuleData1& a, TestPbModuleData1& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TestPbModuleData1* New() const PROTOBUF_FINAL { return New(NULL); }

  TestPbModuleData1* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TestPbModuleData1& from);
  void MergeFrom(const TestPbModuleData1& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TestPbModuleData1* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string f2 = 2;
  bool has_f2() const;
  void clear_f2();
  static const int kF2FieldNumber = 2;
  const ::std::string& f2() const;
  void set_f2(const ::std::string& value);
  #if LANG_CXX11
  void set_f2(::std::string&& value);
  #endif
  void set_f2(const char* value);
  void set_f2(const char* value, size_t size);
  ::std::string* mutable_f2();
  ::std::string* release_f2();
  void set_allocated_f2(::std::string* f2);

  // required int32 f1 = 1;
  bool has_f1() const;
  void clear_f1();
  static const int kF1FieldNumber = 1;
  ::google::protobuf::int32 f1() const;
  void set_f1(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:TestPbModulePg.TestPbModuleData1)
 private:
  void set_has_f1();
  void clear_has_f1();
  void set_has_f2();
  void clear_has_f2();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr f2_;
  ::google::protobuf::int32 f1_;
  friend struct ::protobuf_TestPbModule_2eproto::TableStruct;
  friend void ::protobuf_TestPbModule_2eproto::InitDefaultsTestPbModuleData1Impl();
};
// -------------------------------------------------------------------

class RspTestPbModule1 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TestPbModulePg.RspTestPbModule1) */ {
 public:
  RspTestPbModule1();
  virtual ~RspTestPbModule1();

  RspTestPbModule1(const RspTestPbModule1& from);

  inline RspTestPbModule1& operator=(const RspTestPbModule1& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RspTestPbModule1(RspTestPbModule1&& from) noexcept
    : RspTestPbModule1() {
    *this = ::std::move(from);
  }

  inline RspTestPbModule1& operator=(RspTestPbModule1&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RspTestPbModule1& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RspTestPbModule1* internal_default_instance() {
    return reinterpret_cast<const RspTestPbModule1*>(
               &_RspTestPbModule1_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(RspTestPbModule1* other);
  friend void swap(RspTestPbModule1& a, RspTestPbModule1& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RspTestPbModule1* New() const PROTOBUF_FINAL { return New(NULL); }

  RspTestPbModule1* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RspTestPbModule1& from);
  void MergeFrom(const RspTestPbModule1& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RspTestPbModule1* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .TestPbModulePg.TestPbModuleData1 list_data = 2;
  int list_data_size() const;
  void clear_list_data();
  static const int kListDataFieldNumber = 2;
  const ::TestPbModulePg::TestPbModuleData1& list_data(int index) const;
  ::TestPbModulePg::TestPbModuleData1* mutable_list_data(int index);
  ::TestPbModulePg::TestPbModuleData1* add_list_data();
  ::google::protobuf::RepeatedPtrField< ::TestPbModulePg::TestPbModuleData1 >*
      mutable_list_data();
  const ::google::protobuf::RepeatedPtrField< ::TestPbModulePg::TestPbModuleData1 >&
      list_data() const;

  // required bool ok = 1;
  bool has_ok() const;
  void clear_ok();
  static const int kOkFieldNumber = 1;
  bool ok() const;
  void set_ok(bool value);

  // @@protoc_insertion_point(class_scope:TestPbModulePg.RspTestPbModule1)
 private:
  void set_has_ok();
  void clear_has_ok();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::TestPbModulePg::TestPbModuleData1 > list_data_;
  bool ok_;
  friend struct ::protobuf_TestPbModule_2eproto::TableStruct;
  friend void ::protobuf_TestPbModule_2eproto::InitDefaultsRspTestPbModule1Impl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ReqTestPbModule1

// required int32 userid = 1;
inline bool ReqTestPbModule1::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqTestPbModule1::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqTestPbModule1::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqTestPbModule1::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google::protobuf::int32 ReqTestPbModule1::userid() const {
  // @@protoc_insertion_point(field_get:TestPbModulePg.ReqTestPbModule1.userid)
  return userid_;
}
inline void ReqTestPbModule1::set_userid(::google::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:TestPbModulePg.ReqTestPbModule1.userid)
}

// required int32 channel = 2;
inline bool ReqTestPbModule1::has_channel() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqTestPbModule1::set_has_channel() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqTestPbModule1::clear_has_channel() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqTestPbModule1::clear_channel() {
  channel_ = 0;
  clear_has_channel();
}
inline ::google::protobuf::int32 ReqTestPbModule1::channel() const {
  // @@protoc_insertion_point(field_get:TestPbModulePg.ReqTestPbModule1.channel)
  return channel_;
}
inline void ReqTestPbModule1::set_channel(::google::protobuf::int32 value) {
  set_has_channel();
  channel_ = value;
  // @@protoc_insertion_point(field_set:TestPbModulePg.ReqTestPbModule1.channel)
}

// -------------------------------------------------------------------

// TestPbModuleData1

// required int32 f1 = 1;
inline bool TestPbModuleData1::has_f1() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TestPbModuleData1::set_has_f1() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TestPbModuleData1::clear_has_f1() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TestPbModuleData1::clear_f1() {
  f1_ = 0;
  clear_has_f1();
}
inline ::google::protobuf::int32 TestPbModuleData1::f1() const {
  // @@protoc_insertion_point(field_get:TestPbModulePg.TestPbModuleData1.f1)
  return f1_;
}
inline void TestPbModuleData1::set_f1(::google::protobuf::int32 value) {
  set_has_f1();
  f1_ = value;
  // @@protoc_insertion_point(field_set:TestPbModulePg.TestPbModuleData1.f1)
}

// optional string f2 = 2;
inline bool TestPbModuleData1::has_f2() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TestPbModuleData1::set_has_f2() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TestPbModuleData1::clear_has_f2() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TestPbModuleData1::clear_f2() {
  f2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_f2();
}
inline const ::std::string& TestPbModuleData1::f2() const {
  // @@protoc_insertion_point(field_get:TestPbModulePg.TestPbModuleData1.f2)
  return f2_.GetNoArena();
}
inline void TestPbModuleData1::set_f2(const ::std::string& value) {
  set_has_f2();
  f2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TestPbModulePg.TestPbModuleData1.f2)
}
#if LANG_CXX11
inline void TestPbModuleData1::set_f2(::std::string&& value) {
  set_has_f2();
  f2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TestPbModulePg.TestPbModuleData1.f2)
}
#endif
inline void TestPbModuleData1::set_f2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_f2();
  f2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TestPbModulePg.TestPbModuleData1.f2)
}
inline void TestPbModuleData1::set_f2(const char* value, size_t size) {
  set_has_f2();
  f2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TestPbModulePg.TestPbModuleData1.f2)
}
inline ::std::string* TestPbModuleData1::mutable_f2() {
  set_has_f2();
  // @@protoc_insertion_point(field_mutable:TestPbModulePg.TestPbModuleData1.f2)
  return f2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TestPbModuleData1::release_f2() {
  // @@protoc_insertion_point(field_release:TestPbModulePg.TestPbModuleData1.f2)
  clear_has_f2();
  return f2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TestPbModuleData1::set_allocated_f2(::std::string* f2) {
  if (f2 != NULL) {
    set_has_f2();
  } else {
    clear_has_f2();
  }
  f2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), f2);
  // @@protoc_insertion_point(field_set_allocated:TestPbModulePg.TestPbModuleData1.f2)
}

// -------------------------------------------------------------------

// RspTestPbModule1

// required bool ok = 1;
inline bool RspTestPbModule1::has_ok() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RspTestPbModule1::set_has_ok() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RspTestPbModule1::clear_has_ok() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RspTestPbModule1::clear_ok() {
  ok_ = false;
  clear_has_ok();
}
inline bool RspTestPbModule1::ok() const {
  // @@protoc_insertion_point(field_get:TestPbModulePg.RspTestPbModule1.ok)
  return ok_;
}
inline void RspTestPbModule1::set_ok(bool value) {
  set_has_ok();
  ok_ = value;
  // @@protoc_insertion_point(field_set:TestPbModulePg.RspTestPbModule1.ok)
}

// repeated .TestPbModulePg.TestPbModuleData1 list_data = 2;
inline int RspTestPbModule1::list_data_size() const {
  return list_data_.size();
}
inline void RspTestPbModule1::clear_list_data() {
  list_data_.Clear();
}
inline const ::TestPbModulePg::TestPbModuleData1& RspTestPbModule1::list_data(int index) const {
  // @@protoc_insertion_point(field_get:TestPbModulePg.RspTestPbModule1.list_data)
  return list_data_.Get(index);
}
inline ::TestPbModulePg::TestPbModuleData1* RspTestPbModule1::mutable_list_data(int index) {
  // @@protoc_insertion_point(field_mutable:TestPbModulePg.RspTestPbModule1.list_data)
  return list_data_.Mutable(index);
}
inline ::TestPbModulePg::TestPbModuleData1* RspTestPbModule1::add_list_data() {
  // @@protoc_insertion_point(field_add:TestPbModulePg.RspTestPbModule1.list_data)
  return list_data_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::TestPbModulePg::TestPbModuleData1 >*
RspTestPbModule1::mutable_list_data() {
  // @@protoc_insertion_point(field_mutable_list:TestPbModulePg.RspTestPbModule1.list_data)
  return &list_data_;
}
inline const ::google::protobuf::RepeatedPtrField< ::TestPbModulePg::TestPbModuleData1 >&
RspTestPbModule1::list_data() const {
  // @@protoc_insertion_point(field_list:TestPbModulePg.RspTestPbModule1.list_data)
  return list_data_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace TestPbModulePg

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_TestPbModule_2eproto__INCLUDED
